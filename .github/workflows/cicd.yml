name: CI/CD Pipeline for Airbnb Management Node.js Backend

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/airbnb-management-backend:${{ github.sha }} .

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/airbnb-management-backend:${{ github.sha }}

  deploy:
    name: Deploy to Server
    runs-on: self-hosted
    needs: build_and_push

    steps:
      - name: SSH and Deploy
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Step 0: Authorize Docker Hub to allow Docker Image Pull
            echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

            # Step 1: Pull the latest Docker image
            echo "Pulling the latest Docker image..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/airbnb-management-backend:${{ github.sha }}

            # Step 2: Stop and remove the existing container (if exists)
            echo "Stopping and removing the existing container..."
            docker stop airbnb-management-backend-container || true
            docker rm airbnb-management-backend-container || true
            
            # Step 3: Prune unused Docker data
            echo "Removing all unused Docker resources..."
            docker system prune -a --volumes -f
            
            # Step 4: Run a new container with environment variables
            echo "Running the new Docker container..."
            docker run -d \
              -p 8000:8000 \
              --name airbnb-management-backend-container \
              --restart unless-stopped \
              -e DB_URI="${{ secrets.DB_URI }}" \
              -e PORT="${{ secrets.PORT }}" \
              -e JWT_SECRET="${{ secrets.JWT_SECRET }}" \
              -e JWT_EXPIRY="${{ secrets.JWT_EXPIRY }}" \
              -e RESET_PASS_SECRET="${{ secrets.RESET_PASS_SECRET }}" \
              -e RESET_PASS_EXPIRY="${{ secrets.RESET_PASS_EXPIRY }}" \
              -e MAIL_HOST="${{ secrets.MAIL_HOST }}" \
              -e MAIL_USER="${{ secrets.MAIL_USER }}" \
              -e MAIL_PASS="${{ secrets.MAIL_PASS }}" \
              -e MAIL_FROM="${{ secrets.MAIL_FROM }}" \
              -e CLOUDINARY_CLOUD_NAME="${{ secrets.CLOUDINARY_CLOUD_NAME }}" \
              -e CLOUDINARY_API_KEY="${{ secrets.CLOUDINARY_API_KEY }}" \
              -e CLOUDINARY_API_SECRET="${{ secrets.CLOUDINARY_API_SECRET }}" \
              ${{ secrets.DOCKER_USERNAME }}/airbnb-management-backend:${{ github.sha }}
