{
  "openapi": "3.0.0",
  "info": {
    "title": "API Documentation",
    "version": "1.0.0",
    "description": "For Airbnb Management Platform"
  },
  "servers": [
    {
      "url": "http://localhost:8000/api/v1"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "User management routes"
    },
    {
      "name": "Admin",
      "description": "Admin-related routes"
    },
    {
      "name": "General",
      "description": "Other general routes"
    }
  ],
  "paths": {
    "/users/logout": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/change-pass": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "current_pass": {
                    "example": "any"
                  },
                  "new_pass": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/": {
      "put": {
        "tags": [
          "Users"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "updates": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/booked-dates/filter": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "property",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/payment-details/": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accountHolderName": {
                    "example": "any"
                  },
                  "accountNumber": {
                    "example": "any"
                  },
                  "bankName": {
                    "example": "any"
                  },
                  "swiftCode": {
                    "example": "any"
                  },
                  "iban": {
                    "example": "any"
                  },
                  "paymentMethod": {
                    "example": "any"
                  },
                  "currency": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/payment-details/{id}": {
      "put": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "updates": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/properties": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/property-utilities/": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "example": "any"
                  },
                  "provider_name": {
                    "example": "any"
                  },
                  "account_no": {
                    "example": "any"
                  },
                  "paid_by": {
                    "example": "any"
                  },
                  "web_login": {
                    "example": "any"
                  },
                  "web_pass": {
                    "example": "any"
                  },
                  "link": {
                    "example": "any"
                  },
                  "uploads": {
                    "example": "any"
                  },
                  "property": {
                    "example": "any"
                  },
                  "already_have_account": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "property",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/property-utilities/{id}": {
      "put": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "updates": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/providers/": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/upload/single": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/upload/multiple": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/user-documents/": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "property",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "example": "any"
                  },
                  "expiry_date": {
                    "example": "any"
                  },
                  "note": {
                    "example": "any"
                  },
                  "document": {
                    "example": "any"
                  },
                  "property": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/user-documents/{id}": {
      "put": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "updates": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/signup": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin can create login credentials for Property Owner by sending details and AUTHORIZED BEARER TOKEN in header. On creation, password string will be shared to admin and Property Owner through Emails.",
        "description": "",
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpRequest"
              }
            }
          }
        }
      }
    },
    "/admin/users": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin can view the list of users by passing AUTHORIZED BEARER TOKEN in header and query parameters - limit and page",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/users/{id}": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin can update the user details by passing AUTHORIZED BEARER TOKEN in header and user ID in path",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin can view the details of the user passing its ID inside path and AUTHORIZED BEARER TOKEN in header.",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin can disable the user, by passing the AUTHORIZED BEARER TOKEN in header and user ID in path, from utilizing the property management platform.",
        "description": "> #TODO: Response might be unnecessarily long",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/amenities/": {
      "post": {
        "tags": [
          "Admin"
        ],
        "description": "",
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "example": "any"
                  },
                  "icon": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/amenities/{id}": {
      "delete": {
        "tags": [
          "Admin"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Admin"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "example": "any"
                  },
                  "icon": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/blog-categories/": {
      "post": {
        "tags": [
          "Admin"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/admin/blogs/": {
      "post": {
        "tags": [
          "Admin"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "example": "any"
                  },
                  "subtitle": {
                    "example": "any"
                  },
                  "body": {
                    "example": "any"
                  },
                  "tags": {
                    "example": "any"
                  },
                  "added_on": {
                    "example": "any"
                  },
                  "category": {
                    "example": "any"
                  },
                  "thumbnail": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/booked-dates/{id}": {
      "put": {
        "tags": [
          "Admin"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "checkin_date": {
                    "example": "any"
                  },
                  "checkout_date": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/admin/contact-us/{id}": {
      "put": {
        "tags": [
          "Admin"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "location": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/airbnb-dubai/": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "AUTHORIZED Admin can add the content for AIRBNB DUBAI page",
        "description": "> #TODO: Created document is being sent from reponse that may be unnecessary",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AirbnbDubaiRequest"
              }
            }
          }
        }
      }
    },
    "/admin/faqs/": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "AUTHORIZED Admin can add new FAQs",
        "description": "> #TODO: Created document is being sent back through response that may be unnecessary",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FaqsRequest"
              }
            }
          }
        }
      }
    },
    "/admin/faqs/{id}": {
      "delete": {
        "tags": [
          "Admin"
        ],
        "summary": "AUTHORIZED Admin can delete any non-required FAQs by specifying ID within params",
        "description": "> #TODO: Deleted document is being sent back through response that may be unnecessary",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "AUTHORIZED Admin can update existing FAQs by specifying ID within params",
        "description": "> #TODO: Updated document is being sent back through response that may be unnecessary",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FaqsRequest"
              }
            }
          }
        }
      }
    },
    "/admin/gallery-types/": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "AUTHORIZED Admin can add any new gallary type by specifying the NAME of gallary type.",
        "description": "> #TODO: Created document is being sent from reponse that may be unnecessary",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "name": "gallary type"
              }
            }
          }
        }
      }
    },
    "/admin/gallery-types/{id}": {
      "delete": {
        "tags": [
          "Admin"
        ],
        "summary": "AUTHORIZED Admin can delete any non-required gallary type by specifying the ID of gallary type in path.",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/admin/gallery/": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "AUTHORIZED Admin can add property images, while creating properties, in gallery collections.",
        "description": "> #TODO: Created document is being sent from reponse that may be unnecessary",
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GallaryRequest"
              }
            }
          }
        }
      }
    },
    "/admin/gallery/{id}": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "AUTHORIZED Admin can overwrite the gallary type by specifying the gallery document using id from path.",
        "description": "> #TODO: Updated document is being sent from reponse that may be unnecessary",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "objectid of gallery type"
              }
            }
          }
        }
      }
    },
    "/admin/home-content/": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "AUTHORIZED Admin can add Home Content to be retrieved on Home page on frontend",
        "description": "> #TODO: Created document is being sent back through response that may be unnecessary",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HomeContentRequest"
              }
            }
          }
        }
      }
    },
    "/admin/home-content/{id}": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "AUTHORIZED Admin can update Home Content to be retrieved on Home page on frontend",
        "description": "> #TODO: Updated document is being sent back through response that may be unnecessary, and requestBody is not well-structured",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HomeContentRequest"
              }
            }
          }
        }
      }
    },
    "/admin/legals/": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "AUTHORIZED Admin can add Legals to be retrieved on Terms & Conditions/Privacy Policy/Refund Policy on frontend",
        "description": "> #TODO: Created document is being sent back through response that may be unnecessary",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LegalsRequest"
              }
            }
          }
        }
      }
    },
    "/admin/maintenance/": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "AUTHORIZED Admin can add maintenance bills for specific property",
        "description": "> #TODO: Created document is being sent from reponse that may be unnecessary",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MaintenanceRequest"
              }
            }
          }
        }
      }
    },
    "/admin/featured-articles/": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "AUTHORIZED Admin can add Featured Articles",
        "description": "> #TODO: Created document is being sent back through response that may be unnecessary",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeaturedArticlesRequest"
              }
            }
          }
        }
      }
    },
    "/admin/bank-details/{id}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "AUTHORIZED Admin can fetch the bank details of specific user using the ID passed in params",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "AUTHORIZED Admin can update the bank details of specific user using the ID passed in params and the updated fields as an object - updates - in request body",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatesRequest"
              }
            }
          }
        }
      }
    },
    "/admin/pricing/": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "AUTHORIZED Admin can add Pricing to be retrieved on Pricings Page on frontend",
        "description": "> #TODO: Created document is being sent back through response that may be unnecessary",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PricingsRequest"
              }
            }
          }
        }
      }
    },
    "/admin/pricing/{id}": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "AUTHORIZED Admin can update Pricing to be retrieved on Pricings Page on frontend by specifying ID witin params.",
        "description": "> #TODO: Updated document is being sent back through response that may be unnecessary",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatesRequest"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "summary": "AUTHORIZED Admin can delete Pricing by specifying ID within request parameters",
        "description": "> #TODO: Deleted document is being sent back through response that may be unnecessary",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/admin/properties/": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "AUTHORIZED Admin can add new property",
        "description": "> #TODO: Created document is being sent back through reponse that may be unnecessary",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PropertiesRequest"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "AUTHORIZED Admin can view the list of properties with a LIMIT of properties on each PAGE",
        "description": "> #TODO: Each document of properties may contain unnecessary data that may not be required on admin panel",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/properties/{id}": {
      "delete": {
        "tags": [
          "Admin"
        ],
        "summary": "AUTHORIZED Admin can delete any non-required property by specifying the ID within params",
        "description": "> #TODO: Deleted document is being sent back through response that may be unnecessary",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "AUTHORIZED Admin can update any non-required property by specifying the ID within params",
        "description": "> #TODO: Updated document is being sent back through response that may be unnecessary",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatesRequest"
              }
            }
          }
        }
      }
    },
    "/admin/properties/{user}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "AUTHORIZED Admin can view properties of any selected user by specifying id of the user as USER within params",
        "description": "> #TODO: Each document of properties list may have unnecessary data being sent back to client",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/admin/requirements/": {
      "post": {
        "tags": [
          "Admin"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "head": {
                    "example": "any"
                  },
                  "points": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/providers/": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "AUTHORIZED Admin can set or manage the list of providers for different services - electricity, internet, gas, chiller, etc.",
        "description": "> #TODO: On successful creation, no data is being sent from reponse",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProvidersRequest"
              }
            }
          }
        }
      }
    },
    "/admin/services/add-service": {
      "post": {
        "tags": [
          "Admin"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/subscriptions/": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "AUTHORIZED Admin can see the list of subscriptions or subscribers",
        "description": "> #TODO: Revise the response to selectively send required keys",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/admin/subscriptions/{id}": {
      "delete": {
        "tags": [
          "Admin"
        ],
        "summary": "AUTHORIZED Admin can delete subscriptions or subscribers",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/admin/testimonials/": {
      "post": {
        "tags": [
          "Admin"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "example": "any"
                  },
                  "name": {
                    "example": "any"
                  },
                  "designation": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/third-party-logos/": {
      "post": {
        "tags": [
          "Admin"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "logo": {
                    "example": "any"
                  },
                  "name": {
                    "example": "any"
                  },
                  "type": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/third-party-logos/{id}": {
      "put": {
        "tags": [
          "Admin"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "updates": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/utility/": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "AUTHORIZED Admin can set or manage the applicable taxes",
        "description": "> #TODO: Creatde Object is being sent back, may or may not be needed",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxUtilityRequest"
              }
            }
          }
        }
      }
    },
    "/admin/guides/": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "AUTHORIZED Admin can add Videos media as guides to be retrieved on MEDIA page on frontend",
        "description": "> #TODO: Created document is being sent back through response that may be unnecessary",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VideoGuidesRequest"
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "General"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/blogs/": {
      "get": {
        "tags": [
          "General"
        ],
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/blogs/{id}": {
      "get": {
        "tags": [
          "General"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/book-details/{id}": {
      "get": {
        "tags": [
          "General"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/book-details/": {
      "post": {
        "tags": [
          "General"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {
                    "example": "any"
                  },
                  "last_name": {
                    "example": "any"
                  },
                  "email": {
                    "example": "any"
                  },
                  "guests": {
                    "example": "any"
                  },
                  "phone_number": {
                    "example": "any"
                  },
                  "message": {
                    "example": "any"
                  },
                  "promo_code": {
                    "example": "any"
                  },
                  "newsletter_agree": {
                    "example": "any"
                  },
                  "property": {
                    "example": "any"
                  },
                  "booked_dates": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/booked-dates/": {
      "get": {
        "tags": [
          "General"
        ],
        "description": "",
        "parameters": [
          {
            "name": "property",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "General"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "checkin_date": {
                    "example": "any"
                  },
                  "checkout_date": {
                    "example": "any"
                  },
                  "property": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contact-us/": {
      "get": {
        "tags": [
          "General"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "General"
        ],
        "description": "",
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "emails": {
                    "example": "any"
                  },
                  "phones": {
                    "example": "any"
                  },
                  "location": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contact-us/query": {
      "post": {
        "tags": [
          "General"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fullname": {
                    "example": "any"
                  },
                  "email": {
                    "example": "any"
                  },
                  "phone": {
                    "example": "any"
                  },
                  "subject": {
                    "example": "any"
                  },
                  "message": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/airbnb-dubai/": {
      "get": {
        "tags": [
          "General"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/estimate-revenue/": {
      "post": {
        "tags": [
          "General"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "area": {
                    "example": "any"
                  },
                  "beds": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "General"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/faqs/": {
      "get": {
        "tags": [
          "General"
        ],
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/gallery-types/": {
      "get": {
        "tags": [
          "General"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/gallery/": {
      "get": {
        "tags": [
          "General"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/home-content/": {
      "get": {
        "tags": [
          "General"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/legals/": {
      "get": {
        "tags": [
          "General"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/featured-articles/": {
      "get": {
        "tags": [
          "General"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/pricing/": {
      "get": {
        "tags": [
          "General"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/properties/": {
      "get": {
        "tags": [
          "General"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/properties/{id}": {
      "get": {
        "tags": [
          "General"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/requirements/": {
      "get": {
        "tags": [
          "General"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/services/": {
      "get": {
        "tags": [
          "General"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/subscriptions/": {
      "post": {
        "tags": [
          "General"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/testimonials/": {
      "get": {
        "tags": [
          "General"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/third-party-logos/": {
      "get": {
        "tags": [
          "General"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/guides/": {
      "get": {
        "tags": [
          "General"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "parameters": {
      "LimitParameter": {
        "in": "query",
        "name": "limit",
        "required": false,
        "type": "number",
        "description": "Number of users per page"
      },
      "PageParameter": {
        "in": "query",
        "name": "page",
        "required": false,
        "type": "number",
        "description": "Page number for pagination"
      },
      "IdParameter": {
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string",
          "description": "Unique identifier for the resource"
        },
        "description": "The ID of the resource to retrieve or modify"
      },
      "UserParameter": {
        "in": "path",
        "name": "user",
        "required": true,
        "schema": {
          "type": "string",
          "description": "Unique identifier for the resource"
        },
        "description": "The ID of the resource to retrieve or modify"
      }
    },
    "schemas": {
      "SignUpRequest": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "example": "Doe"
          },
          "email": {
            "type": "array",
            "example": [
              "john.doe@example.com",
              "abc@xyz.com"
            ],
            "items": {
              "type": "string"
            }
          },
          "phone": {
            "type": "array",
            "example": [
              "+919876543210"
            ],
            "items": {
              "type": "string"
            }
          },
          "role": {
            "type": "string",
            "example": "Owner"
          },
          "address": {
            "type": "object",
            "properties": {
              "building_no": {
                "type": "string",
                "example": "123"
              },
              "city": {
                "type": "string",
                "example": "Springfield"
              },
              "street": {
                "type": "string",
                "example": "Main Street"
              },
              "area": {
                "type": "string",
                "example": "Downtown"
              },
              "landmark": {
                "type": "string",
                "example": "Near City Mall"
              },
              "country": {
                "type": "string",
                "example": "Dubai"
              },
              "pincode": {
                "type": "string",
                "example": "123456"
              }
            }
          }
        }
      },
      "UpdatesRequest": {
        "type": "object",
        "properties": {
          "updates": {
            "type": "object",
            "properties": {
              "abc_updated_key": {
                "type": "string",
                "example": "xyz_updated_value"
              }
            }
          }
        }
      },
      "TaxUtilityRequest": {
        "type": "object",
        "properties": {
          "vat_tax_rate": {
            "type": "number",
            "example": 5
          },
          "tourism_tax_rate": {
            "type": "number",
            "example": 6
          }
        }
      },
      "MaintenanceRequest": {
        "type": "object",
        "properties": {
          "issue": {
            "type": "string",
            "example": "date_of_issue"
          },
          "status": {
            "type": "string",
            "example": "Pending/In Progress/Resolved"
          },
          "cost": {
            "type": "number",
            "example": 1234.5
          },
          "property": {
            "type": "string",
            "example": "object_id of property being maintained"
          }
        }
      },
      "GallaryRequest": {
        "type": "object",
        "properties": {
          "img_url": {
            "type": "string",
            "example": "cloudinary image url"
          },
          "type": {
            "type": "string",
            "example": "gallary_type_object_id"
          }
        }
      },
      "ProvidersRequest": {
        "type": "object",
        "properties": {
          "internet": {
            "type": "object",
            "properties": {
              "service_providers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "service_provider_name"
                    }
                  }
                }
              }
            }
          },
          "electricity_water": {
            "type": "object",
            "properties": {
              "service_providers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "service_provider_name"
                    }
                  }
                }
              }
            }
          },
          "gas": {
            "type": "object",
            "properties": {
              "service_providers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "service_provider_name"
                    }
                  }
                }
              }
            }
          },
          "chiller": {
            "type": "object",
            "properties": {
              "service_providers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "service_provider_name"
                    }
                  }
                }
              }
            }
          },
          "other": {
            "type": "object",
            "properties": {
              "service_providers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "service_provider_name"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "AirbnbDubaiRequest": {
        "type": "object",
        "properties": {
          "section1": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "example": "section1_title"
              },
              "body": {
                "type": "string",
                "example": "section1_body"
              }
            }
          },
          "section2": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "example": "section2_title"
              },
              "body": {
                "type": "string",
                "example": "section2_body"
              },
              "image": {
                "type": "string",
                "example": "section2_image_url"
              },
              "text_direction": {
                "type": "string",
                "example": "left/right/center"
              }
            }
          },
          "section3": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "example": "section3_title"
              },
              "points": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "example": "section3_point_title"
                    },
                    "body": {
                      "type": "string",
                      "example": "section3_point_body"
                    }
                  }
                }
              }
            }
          },
          "section4": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "example": "section4_title"
              },
              "body": {
                "type": "string",
                "example": "section4_html_body"
              },
              "image": {
                "type": "string",
                "example": "section4_image_url"
              },
              "text_direction": {
                "type": "string",
                "example": "left/right/center"
              }
            }
          },
          "section5": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "example": "section5_title"
              },
              "images": {
                "type": "array",
                "example": [
                  "section5_images_url"
                ],
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "PropertiesRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "title_of_property"
          },
          "description": {
            "type": "string",
            "example": "description_of_property"
          },
          "property_images": {
            "type": "array",
            "example": [
              "objectIds_from_gallery_collection"
            ],
            "items": {
              "type": "string"
            }
          },
          "property_details": {
            "type": "object",
            "properties": {
              "max_guest_count": {
                "type": "number",
                "example": 3
              },
              "rooms_count": {
                "type": "number",
                "example": 3
              },
              "beds_count": {
                "type": "number",
                "example": 3
              },
              "bathrooms_count": {
                "type": "number",
                "example": 1
              },
              "furnishing": {
                "type": "string",
                "example": "Premium/Standard"
              },
              "wifi": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "property_wifi_name"
                  },
                  "password": {
                    "type": "string",
                    "example": "property_wifi_password"
                  }
                }
              },
              "permit": {
                "type": "object",
                "properties": {
                  "permit_code": {
                    "type": "string",
                    "example": "property_permit_code"
                  },
                  "permit_expiry_date": {
                    "type": "string",
                    "example": "property_permit_expiry_date"
                  }
                }
              },
              "parking_no": {
                "type": "string",
                "example": "property_parking_no"
              }
            }
          },
          "address": {
            "type": "object",
            "properties": {
              "building_no": {
                "type": "string",
                "example": "property_building_no"
              },
              "city": {
                "type": "string",
                "example": "property_city"
              },
              "street": {
                "type": "string",
                "example": "address_street"
              },
              "area": {
                "type": "string",
                "example": "address_area"
              },
              "landmark": {
                "type": "string",
                "example": "address_nearby_landmark"
              },
              "pincode": {
                "type": "string",
                "example": "address_pincode"
              },
              "country": {
                "type": "string",
                "example": "address_country"
              }
            }
          },
          "discounts_percentage": {
            "type": "object",
            "properties": {
              "weekly": {
                "type": "number",
                "example": 5
              },
              "monthly": {
                "type": "number",
                "example": 20
              }
            }
          },
          "costs": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "example": "AED"
              },
              "security_details": {
                "type": "string",
                "example": "The damage deposit will be taken at arrival and returned 7-14 days after chekout, subject to a damage inspection of the property."
              },
              "prices": {
                "type": "object",
                "properties": {
                  "security_amount": {
                    "type": "number",
                    "example": 2000
                  },
                  "price_per_night": {
                    "type": "number",
                    "example": 1000
                  },
                  "cleaning_fee": {
                    "type": "number",
                    "example": 330
                  }
                }
              }
            }
          },
          "property_check_details": {
            "type": "object",
            "properties": {
              "check_in": {
                "type": "string",
                "example": "15:00"
              },
              "check_out": {
                "type": "string",
                "example": "11:00"
              }
            }
          },
          "staying_rules": {
            "type": "array",
            "example": [
              "Please don't forget to send your passport/valid ID as well as those checking in with you. This is a strict requirement of Dubai's Economy and Tourism Department (DET)"
            ],
            "items": {
              "type": "string"
            }
          },
          "cancellation_policy": {
            "type": "string",
            "example": "You can cancel the reservation free of charge until 14 days before arrival. The total reservation price will be charged if you cancel within 14 days of arrival."
          },
          "amenities": {
            "type": "array",
            "example": [
              "objectIds_from_amenities_collection"
            ],
            "items": {
              "type": "string"
            }
          },
          "important_information": {
            "type": "object",
            "properties": {
              "about_space": {
                "type": "string",
                "example": "About_property_space"
              },
              "guest_access": {
                "type": "string",
                "example": "property_guest_access"
              },
              "getting_around": {
                "type": "string",
                "example": "property_getting_around"
              },
              "other": {
                "type": "string",
                "example": "property_other_info"
              }
            }
          },
          "user": {
            "type": "string",
            "example": "objectId_of_property_owner_from_user_collection"
          },
          "status": {
            "type": "string",
            "example": "Active/Inactive"
          }
        }
      },
      "FaqsRequest": {
        "type": "object",
        "properties": {
          "question": {
            "type": "string",
            "example": "faq_question"
          },
          "answer": {
            "type": "string",
            "example": "faq_answer"
          },
          "page": {
            "type": "array",
            "example": [
              "page_route_mapping_value"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "FeaturedArticlesRequest": {
        "type": "object",
        "properties": {
          "third_party": {
            "type": "string",
            "example": "ObjectId to Third Party Logos"
          },
          "headline": {
            "type": "string",
            "example": "headline_of_featured_article"
          },
          "added_on": {
            "type": "string",
            "example": "date_when_featured"
          },
          "link": {
            "type": "string",
            "example": "link_to_featured_articleS"
          }
        }
      },
      "VideoGuidesRequest": {
        "type": "object",
        "properties": {
          "video_url": {
            "type": "string",
            "example": "cloudinary_url_of_video"
          },
          "title": {
            "type": "string",
            "example": "Title_of_Video_Guide"
          },
          "thumbnail": {
            "type": "string",
            "example": "thumbnail_image_for_video"
          }
        }
      },
      "HomeContentRequest": {
        "type": "object",
        "properties": {
          "banner_images": {
            "type": "array",
            "example": [
              "image_urls_for_home_banners"
            ],
            "items": {
              "type": "string"
            }
          },
          "what_people_says": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "example": "title_for_section_what_people_says"
              },
              "description": {
                "type": "string",
                "example": "description_for_section_what_people_says"
              },
              "facts": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "icon": {
                      "type": "string",
                      "example": "cloudinary_icon_url"
                    },
                    "title": {
                      "type": "string",
                      "example": "fact_title"
                    },
                    "description": {
                      "type": "string",
                      "example": "fact_description"
                    }
                  }
                }
              }
            }
          },
          "features": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "icon": {
                  "type": "string",
                  "example": "cloudinary_icon_url"
                },
                "title": {
                  "type": "string",
                  "example": "features_title"
                },
                "description": {
                  "type": "string",
                  "example": "features_description"
                }
              }
            }
          },
          "cleaning_maintenance": {
            "type": "object",
            "properties": {
              "what_inclued": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "example": "title_text"
                    },
                    "description": {
                      "type": "string",
                      "example": "description_text"
                    }
                  }
                }
              }
            }
          },
          "interior_design_page": {
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "example": "description_for_interior_design_page"
              },
              "what_inclued": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "example": "title_text"
                    },
                    "description": {
                      "type": "string",
                      "example": "description_text"
                    },
                    "others": {
                      "type": "array",
                      "example": [
                        "other_points"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "listing_management": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "example": "title_for_listing_management"
              },
              "description": {
                "type": "string",
                "example": "description_for_listing_management"
              },
              "what_inclued": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "example": "title_text"
                    },
                    "description": {
                      "type": "string",
                      "example": "description_text"
                    }
                  }
                }
              }
            }
          },
          "management_support": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "example": "title_for_management_support"
              },
              "description": {
                "type": "string",
                "example": "description_for_management_support"
              },
              "bottom_content": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "example": "title_text"
                    },
                    "description": {
                      "type": "string",
                      "example": "description_text"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "LegalsRequest": {
        "type": "object",
        "properties": {
          "body": {
            "type": "string",
            "example": "html_body_for_legals"
          },
          "title": {
            "type": "string",
            "example": "Terms & Conditions/Privacy Policy/Refund Policy"
          }
        }
      },
      "PricingsRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "pricing_title - On-Boarding"
          },
          "description": {
            "type": "string",
            "example": "pricing_description"
          },
          "figures": {
            "type": "string",
            "example": "pricing_figures - Free/17%"
          },
          "icon": {
            "type": "string",
            "example": "pricing_cloudinary_icon_url"
          },
          "offers": {
            "type": "array",
            "example": [
              "pricing_plan_offers"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}